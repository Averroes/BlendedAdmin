@using BlendedJS
@inject BlendedAdmin.Services.IUrlService urlServicecs
@model BlendedAdmin.Models.Items.ParameterModel

@if (Model.Type == BlendedAdmin.Models.Items.ParmeterTypeModel.TextBox ||
Model.Type == BlendedAdmin.Models.Items.ParmeterTypeModel.Input)
{
    <label class="">@(Model.Label ?? Model.Name)</label>
    <input name="@Model.Name" 
           value="@Model.Value" 
           class="form-control form-control-sm"
           @(@Model.ReadOnly ? "readonly" : "")/>

    @if (Model.Description != null)
    {
        <small class="form-text text-muted">@Model.Description</small>
    }
    <span class="text-danger field-validation-error" data-valmsg-for="@Model.Name" data-valmsg-replace="true">@Model.Error</span>
}
@if (Model.Type == BlendedAdmin.Models.Items.ParmeterTypeModel.Select ||
Model.Type == BlendedAdmin.Models.Items.ParmeterTypeModel.DropDown)
{
    <label>@(Model.Label ?? Model.Name)</label>
    <select 
            name="@Model.Name" 
            value="@Model.Value" 
            class="form-control form-control-sm"
            @(@Model.ReadOnly ? "disabled" : "")>
    @foreach (var option in Model.Options)
    {
        if (Model.Value == option.Value)
        {
            <option value="@option.Value" selected>@option.Text</option>
        }
        else
        {
            <option value="@option.Value">@option.Text</option>
        }
    }
    </select>
    @if (Model.Description != null)
    {
        <small class="form-text text-muted">@Model.Description</small>
    }
    <span class="text-danger field-validation-error" data-valmsg-for="@Model.Name" data-valmsg-replace="true">@Model.Error</span>
}
@if (Model.Type == BlendedAdmin.Models.Items.ParmeterTypeModel.CheckBox)
{
    var id = Guid.NewGuid().ToString();
    <div class="form-check">
        <input id="@id" 
                name="@Model.Name" 
                class="form-check-input" 
                type="checkbox" 
                @(@Model.Value.ToBoolOrDefault(false) ? "checked" : "") 
                @(@Model.ReadOnly ? "disabled" : "") >
        <label class="form-check-label" for="@id">@(Model.Label ?? Model.Name)</label>
        @if (Model.Description != null)
        {
            <small class="form-text text-muted">@Model.Description</small>
        }
    </div>
    <span class="text-danger field-validation-error" data-valmsg-for="@Model.Name" data-valmsg-replace="true">@Model.Error</span>
}
@if (Model.Type == BlendedAdmin.Models.Items.ParmeterTypeModel.Date)
{
    <label class="">@(Model.Label ?? Model.Name)</label>
    <input name="@Model.Name" 
           value="@Model.Value" 
           class="form-control form-control-sm" 
           type="date"
           @(@Model.ReadOnly ? "readonly" : "") />
    @if (Model.Description != null)
    {
        <small class="form-text text-muted">@Model.Description</small>
    }
    <span class="text-danger field-validation-error" data-valmsg-for="@Model.Name" data-valmsg-replace="true">@Model.Error</span>
}
@if (Model.Type == BlendedAdmin.Models.Items.ParmeterTypeModel.DateTime)
{
    <label class="">@(Model.Label ?? Model.Name)</label>
    <input name="@Model.Name" 
           value="@Model.Value"
           class="form-control form-control-sm" 
           type="datetime-local"
           @(@Model.ReadOnly ? "readonly" : "")/>
    @if (Model.Description != null)
    {
        <small class="form-text text-muted">@Model.Description</small>
    }
    <span class="text-danger field-validation-error" data-valmsg-for="@Model.Name" data-valmsg-replace="true">@Model.Error</span>
}